services:
  - postgresql
  - rabbitmq

addons:
  postgresql: "9.4"
  apt:
    packages:
      - rabbitmq-server

os: linux
language: python
python:
  - "3.7"

env:
  global:
    - TRAVIS_CI=True
    - RABBITMQ_URL="amqp://broker_adm:broker_pass@localhost:5672/rabbit_broker"
    - DJANGO_SECRET_KEY="h18i_1j3^d$e6iq8xur&yvbkpk08il9x^&9cf2l2%-0yqx7ss)"

cache:
  directories:
    - $HOME/.cache/pip

jobs:
  include:
    - stage: "Unit tests and linting"
      name: "Unit tests with Python 3.7"
      before_script:
        - sudo mkdir /app
        - sudo mv !(app) /app/
        - sudo chmod 777 -R /app
        - cd /app
        - sudo apt-get install -y openssl build-essential xorg libssl-dev
        - wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
        - tar vxf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
        - cd wkhtmltox
        - sudo chown root:root bin/wkhtmltopdf
        - sudo cp -r * /usr/
        - cd ..
        - psql -c "CREATE DATABASE test_db_app;" -U postgres
        - psql -c "CREATE USER db_user WITH PASSWORD 'db_pass';" -U postgres
        - sudo rabbitmqctl add_user broker_adm broker_pass
        - sudo rabbitmqctl add_vhost rabbit_broker
        - sudo rabbitmqctl set_permissions -p rabbit_broker broker_adm ".*" ".*" ".*"
      script: make ci
      after_success: codecov
    - name: "Formatting with black"
      script: poetry run make reformat-check
    - name: "Linting with flake8"
      script: poetry run make flake8
    - name: "Sorting with isort"
      script: poetry run make isort-check

before_install:
  - pip install --upgrade pip
  - pip install poetry
install:
  - make init
